AWSTemplateFormatVersion: 2010-09-09
Description: CloudFormation Template for task three

Parameters:
  S3DataBucketName:
    Description: Bucket where the data is dumped
    Type: "String"

  TaskQueueName:
    Description: Name of the SQS queue for task processing
    Type: "String"

  LambdaRuntimeVersion:
    Description: Version of the Lambda runtime
    Type: "String"

  LambdaHandler:
    Description: Lambda function handler (fileName.functionName)
    Type: "String"

  LambdaBucketName:
    Description: Name of the S3 bucket where the Lambda code is stored
    Type: "String"

  LambdaBucketKey:
    Description: S3 key for the Lambda code
    Type: "String"

  CrawlerLambdaBucketKey:
    Description: S3 key for the Lambda code
    Type: "String"

  DynamoDBTableName:
    Description: Name of the DynamoDB table for Glue job rules
    Type: "String"

  CSVGlueJobName:
    Description: Name of the Glue job for CSV processing
    Type: "String"

  CSVGlueScriptLocation:
    Description: S3 location of the Glue job script
    Type: "String"

  GluePythonVersion:
    Type: String
    Description: Python version for Glue Job (e.g., '3.12')
    Default: "3"

  TSVGlueJobName:
    Description: Name of the Glue job for TSV processing
    Type: "String"

  TSVGlueScriptLocation:
    Description: S3 location of the Glue job script for TSV processing
    Type: "String"

  GlueOutputLocation:
    Type: String
    Description: S3 location for Glue job output
 
  GlueOutputS3BucketName:
    Type: String
    Description: S3 bucket for Glue job output
  
  GlueJobResultRuleName:
    Type: String
    Description: Name of the EventBridge rule for Glue job results

  CrawlerLambdaHandler:
    Description: Lambda function handler (fileName.functionName)
    Type: "String"

Resources:
  TaskQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref TaskQueueName

  S3DataBucket:
    Type: AWS::S3::Bucket
    # DependsOn: TaskQueuePolicy
    Properties:
      BucketName: !Ref S3DataBucketName
      NotificationConfiguration:
        QueueConfigurations:
          - Queue: !GetAtt TaskQueue.Arn
            Event: s3:ObjectCreated:*

  GlueOutputS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref GlueOutputS3BucketName

  DynamoGlueJobRulesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref DynamoDBTableName
      AttributeDefinitions:
        - AttributeName: file_type
          AttributeType: S
      KeySchema:
        - AttributeName: file_type
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  TaskQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    DependsOn: TaskQueue
    Properties:
      Queues:
        - !Ref TaskQueue
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: s3.amazonaws.com
            Action:  SQS:*
            Resource: !GetAtt TaskQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !Sub "arn:aws:s3:::${S3DataBucketName}"

  LambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource: "arn:aws:s3:::*/*"
                
              - Effect: Allow
                Action:
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                Resource: !GetAtt TaskQueue.Arn
                
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:DescribeTable
                Resource: !GetAtt DynamoGlueJobRulesTable.Arn

              - Effect: Allow
                Action:
                  - glue:StartJobRun
                Resource: "arn:aws:glue:*"

              - Effect: Allow
                Action:
                  - glue:StartCrawler
                Resource: "arn:aws:glue:*:*:crawler/*"

              - Effect: Allow
                Action:
                  - athena:StartQueryExecution
                  - athena:GetQueryExecution
                  - athena:GetQueryResults
                  - athena:StopQueryExecution
                Resource: "*"

              - Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - "arn:aws:s3:::glue-output-bucket-11-05"
                  - "arn:aws:s3:::glue-output-bucket-11-05/*"

          
          PolicyName: !Sub "lambda-policy-role"

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: LambdaFunction
      Runtime: !Ref LambdaRuntimeVersion
      Role: !GetAtt LambdaFunctionRole.Arn
      Handler: !Ref LambdaHandler
      Environment:
        Variables:
          DYNAMO_TABLE_NAME: !Ref DynamoDBTableName
          GLUE_OUTPUT_LOCATION: !Ref GlueOutputLocation
      Code:
        S3Bucket: !Ref LambdaBucketName
        S3Key: !Ref LambdaBucketKey

  SQSLambdaTrigger:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn: !GetAtt TaskQueue.Arn
      FunctionName: !Ref LambdaFunction
      Enabled: true

  GlueJobRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "glue.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "*"
                Resource: "*"

  CSVGlueJob:
    Type: AWS::Glue::Job
    Properties:
      Command:
        Name: glueetl
        ScriptLocation: !Ref CSVGlueScriptLocation
        PythonVersion: !Ref GluePythonVersion
      DefaultArguments:
        "--job-bookmark-option": "job-bookmark-enable"
      ExecutionProperty:
        MaxConcurrentRuns: 2
      MaxRetries: 0
      Name: !Ref CSVGlueJobName
      Role: !Ref GlueJobRole

  TSVGlueJob:
    Type: AWS::Glue::Job
    Properties:
      Command:
        Name: glueetl
        ScriptLocation: !Ref TSVGlueScriptLocation
        PythonVersion: !Ref GluePythonVersion
      DefaultArguments:
        "--job-bookmark-option": "job-bookmark-enable"
      ExecutionProperty:
        MaxConcurrentRuns: 2
      MaxRetries: 0
      Name: !Ref TSVGlueJobName
      Role: !Ref GlueJobRole

  CrawlerLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: "CrawlerLambdaFunction"
      Runtime: !Ref LambdaRuntimeVersion
      Role: !GetAtt LambdaFunctionRole.Arn
      Handler: !Ref CrawlerLambdaHandler
      Code:
        S3Bucket: !Ref LambdaBucketName
        S3Key: !Ref CrawlerLambdaBucketKey

  LambdaInvokePermissionForEventBridge:
    Type: AWS::Lambda::Permission
    DependsOn:  CrawlerLambdaFunction
    Properties:
      FunctionName: !GetAtt CrawlerLambdaFunction.Arn
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt GlueJobResultRule.Arn

  GlueJobResultRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Ref GlueJobResultRuleName
      EventPattern:
        source:
          - "aws.glue"
        detail-type:
          - "Glue Job State Change"
        detail:
          jobName:
            - !Ref CSVGlueJobName
            - !Ref TSVGlueJobName
      Targets:
        - Arn: !GetAtt CrawlerLambdaFunction.Arn
          Id: "TargetFunctionV1"


